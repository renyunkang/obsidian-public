<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>iptables on</title><link>https://www.ryken.cloud/tags/iptables/</link><description>Recent content in iptables on</description><generator>Hugo -- gohugo.io</generator><language>zh-cn</language><lastBuildDate>Wed, 22 Nov 2023 00:00:00 +0000</lastBuildDate><atom:link href="https://www.ryken.cloud/tags/iptables/index.xml" rel="self" type="application/rss+xml"/><item><title>iptables 查看流向</title><link>https://www.ryken.cloud/iptables-%E6%9F%A5%E7%9C%8B%E6%B5%81%E5%90%91/</link><pubDate>Wed, 22 Nov 2023 00:00:00 +0000</pubDate><guid>https://www.ryken.cloud/iptables-%E6%9F%A5%E7%9C%8B%E6%B5%81%E5%90%91/</guid><description>1. 设置 iptables 规则 1 2 3 4 5 iptables -t raw -A OUTPUT -p icmp -j LOG iptables -t raw -A PREROUTING -p icmp -j LOG iptables -t raw -A OUTPUT -p icmp -j TRACE iptables -t raw -A PREROUTING -p icmp -j TRACE</description></item><item><title>iptables 规则</title><link>https://www.ryken.cloud/iptables-%E8%A7%84%E5%88%99/</link><pubDate>Wed, 22 Nov 2023 00:00:00 +0000</pubDate><guid>https://www.ryken.cloud/iptables-%E8%A7%84%E5%88%99/</guid><description>规则由匹配条件和处理动作组成。 匹配条件 匹配条件分为基本匹配条件与扩展匹配条件 基本匹配条件： 源地址Source IP，目标地址 Destination IP，可以作为基本匹配条件。 扩展匹配条件： 除了上述的条件可以用于匹配，还有很多其他的条件可以用于匹配，这些条件泛称为扩展条件，这些扩展条件其实也是netfilter中的一部分，只是以模块的形式存在，如果想要使用这些条件，则需要依赖对应的扩展模块。 源端口Source Port, 目标端口Destination Port，可以作为扩展匹配条件 处理动作 处理动作在iptables中被称为target（这样说并不准确，我们暂且这样称呼），动作也可以分为基本动作和扩展动作。 此处列出一些常用的动作
ACCEPT：允许数据包通过。 DROP：直接丢弃数据包，不给任何回应信息，这时候客户端会感觉自己的请求泥牛入海了，过了超时时间才会有反应。 REJECT：拒绝数据包通过，必要时会给数据发送端一个响应的信息，客户端刚请求就会收到拒绝的信息。 SNAT：源地址转换，解决内网用户用同一个公网地址上网的问题。 MASQUERADE：是SNAT的一种特殊形式，适用于动态的、临时会变的ip上。 DNAT：目标地址转换。 REDIRECT：在本机做端口映射。 LOG：在/var/log/messages文件中记录日志信息，然后将数据包传递给下一条规则，也就是说除了记录以外不对数据包做任何其他操作，仍然让下一条规则去匹配。 MARK：为匹配的数据包设置标记，可以用于后续规则的匹配和处理。 NOTRACK：排除匹配的数据包不被连接跟踪系统跟踪。 RETURN：返回到调用链的上一个规则，用于在子链中执行完特定操作后返回。</description></item><item><title>iptables 转发</title><link>https://www.ryken.cloud/iptables-%E8%BD%AC%E5%8F%91/</link><pubDate>Wed, 22 Nov 2023 00:00:00 +0000</pubDate><guid>https://www.ryken.cloud/iptables-%E8%BD%AC%E5%8F%91/</guid><description>端口转发 将本机的8080端口转发至其他主机，主机IP：192.168.1.12，目标主机IP和端口：192.168.1.13:8088，规则如下
1 2 3 iptables -t nat -A PREROUTING -p tcp -m tcp --dport 8080 -j DNAT --to-destination 192.</description></item><item><title>iptables</title><link>https://www.ryken.cloud/iptables/</link><pubDate>Sat, 21 Oct 2023 00:00:00 +0000</pubDate><guid>https://www.ryken.cloud/iptables/</guid><description>Calico 使用 iptables 数据面时会创建多个 iptables 规则来实现网络策略和流量控制。这些规则用于实现诸如流量隔离、流量转发、负载均衡和访问控制等功能。 Calico 会根据定义的网络策略自动生成 iptables 规则。此外，Calico 还会创建一些基础规则来实现其核心功能，例如路由和网络隔离。所以说，即使您没有定义任何网络策略，Calico 仍然会在主机上创建一些 iptables 规则。
calico 使用 iptables
与 service 有什么关系？</description></item><item><title>ipset</title><link>https://www.ryken.cloud/ipset/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://www.ryken.cloud/ipset/</guid><description>iptables中使用ipset 在iptables中使用ipset，只要加上-m set &amp;ndash;match-set即可
目的ip使用ipset（ipset集合为bbb） iptables -I INPUT -s 192.168.100.36 -m set --match-set bbb dst -j DROP
源ip使用ipset（ipset集合为aaa） iptables -I INPUT -m set --match-set aaa src -d 192.</description></item><item><title>iptables 匹配条件</title><link>https://www.ryken.cloud/iptables-%E5%8C%B9%E9%85%8D%E6%9D%A1%E4%BB%B6/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://www.ryken.cloud/iptables-%E5%8C%B9%E9%85%8D%E6%9D%A1%E4%BB%B6/</guid><description>当规则中同时存在多个匹配条件时，多个条件之间默认存在”与”的关系，即报文必须同时满足所有条件，才能被规则匹配。
基本匹配条件 -s用于匹配报文的源地址,可以同时指定多个源地址，每个IP之间用逗号隔开，也可以指定为一个网段。 1 2 3 iptables -t filter -I INPUT -s 192.168.1.111,192.168.1.118 -j DROP iptables -t filter -I INPUT -s 192.</description></item><item><title>iptables 原理</title><link>https://www.ryken.cloud/iptables-%E5%8E%9F%E7%90%86/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://www.ryken.cloud/iptables-%E5%8E%9F%E7%90%86/</guid><description>在青云环境下进行测试openelb时发现了该问题，但是可能其他环境也存在这个问题，**集群中某一个节点无法发送和接收udp包，**由于集群中所使用的cni插件flannel默认为vxlan模式，vxlan使用了overlay的udpd封装，因此导致一个节点无法与集群中其他节点通信但是可以通过其他的tcp、http连接通信。
在排查过程中怀疑，iptables被修改了，过滤了udp的协议包，因此使用iptables进行了排查，重新看了一下iptables
各个表的功能如下
filter表：负责过滤功能，防火墙；内核模块：iptables_filter nat表：network address translation，网络地址转换功能；内核模块：iptable_nat mangle表：拆解报文，做出修改，并重新封装 的功能；iptable_mangle raw表：关闭nat表上启用的连接追踪机制；iptable_raw 按道理这里只涉及到filter表，filter表在数据流入时，只会经过INPUT链，查看规则
1 2 3 4 5 6 7 8 9 10 11 12 13 root@i-vszzg2k0:~ iptables --line-number -nvL INPUT -t filter Chain INPUT (policy ACCEPT 12966 packets, 3234K bytes) num pkts bytes target prot opt in out source destination 1 200K 151M KUBE-NODEPORTS all -- * * 0.</description></item><item><title>iptables 命令增删改查</title><link>https://www.ryken.cloud/iptables-%E5%91%BD%E4%BB%A4%E5%A2%9E%E5%88%A0%E6%94%B9%E6%9F%A5/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://www.ryken.cloud/iptables-%E5%91%BD%E4%BB%A4%E5%A2%9E%E5%88%A0%E6%94%B9%E6%9F%A5/</guid><description>iptables预定了4张表，分别是raw表、mangle表、nat表、filter表，不同的表拥有不同的功能。 filter负责过滤功能，比如允许哪些IP地址访问，拒绝哪些IP地址访问，允许访问哪些端口，禁止访问哪些端口，filter表会根据我们定义的规则进行过滤，filter表应该是最常用到的表了。
iptable查看命令 iptables -L：显示所有的规则（默认为filter表） 绿色标注的规则是Centos6启动iptables以后默认设置的规则，蓝色标注部分为链，INPUT链、FORWARD链、OUTPUT链，每条链中都有自己的规则。
iptables -t nat -L：显示nat表中的所有规则（使用-t 选定表）
iptables -t filter -L INPUT：显示filter表中的所有INPUT规则
1 2 3 4 5 6 7 8 9 10 root@ubuntu:/home/mind/Program/test# iptables -t filter -L INPUT Chain INPUT (policy ACCEPT) target prot opt source destination ACCEPT all -- anywhere anywhere ACCEPT all -- anywhere anywhere state RELATED,ESTABLISHED ACCEPT tcp -- anywhere anywhere tcp dpt:ssh ACCEPT tcp -- anywhere anywhere tcp dpt:http ACCEPT tcp -- anywhere anywhere tcp dpt:https DROP tcp -- anywhere anywhere tcp dpt:mysql ACCEPT icmp -- anywhere anywhere icmp echo-request iptables -t filter -vL INPUT：加上-v 显示更详细的信息</description></item><item><title>iptables 软件防火墙</title><link>https://www.ryken.cloud/iptables-%E8%BD%AF%E4%BB%B6%E9%98%B2%E7%81%AB%E5%A2%99/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://www.ryken.cloud/iptables-%E8%BD%AF%E4%BB%B6%E9%98%B2%E7%81%AB%E5%A2%99/</guid><description>iptables基础 iptables一个命令行工具，位于用户空间，用这个工具操作防火墙真正的安全框架netfilter。 用户通过iptables这个代理，将用户的安全设定执行到netfilter中
netfilter是linux平台下的包过滤防火墙，完成封包过滤、封包重定向和网络地址转换（NAT）等功能。
用户使用iptables命令添加、修改和删除对应的规则，iptables按照这些规则去执行对应的操作。规则储存在内核空间的信息包过滤表中，规则指定了源地址、目的地址、传输协议（如TCP、UDP、ICMP）和服务类型（如HTTP、FTP和SMTP）等以及iptable对于这些规则的处理策略（如放行accept、拒绝reject和丢弃drop）。
1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 root@ubuntu:/home/mind/Program/test# iptables -t nat -nL Chain PREROUTING (policy ACCEPT) target prot opt source destination DOCKER all -- 0.</description></item><item><title>IPTables负载均衡</title><link>https://www.ryken.cloud/iptables%E5%92%8Cipvs%E8%B4%9F%E8%BD%BD%E5%9D%87%E8%A1%A1/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://www.ryken.cloud/iptables%E5%92%8Cipvs%E8%B4%9F%E8%BD%BD%E5%9D%87%E8%A1%A1/</guid><description>IPTables负载均衡 环境准备，准备nginx镜像，一个为正常访问的欢迎界面，一个修改为其他的界面，此处我修改为了50x.html 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 root@orange:~# docker run --rm -d --privileged=true nginx-test:1.</description></item></channel></rss>